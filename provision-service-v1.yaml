openapi: 3.0.1
info:
  title: Provision service
  version: v1
servers:
  - url: Please follow the release note for further information
tags:
  - name: Account APIs
paths:
  "/accounts":
    post:
      tags:
        - Account APIs
      operationId: createTopenIDAccount
      summary: Provision a user
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateAccountRequest"
        required: true
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        nullable: true
                        example:
              examples:
                create_successful:
                  summary: Provision a user successfully
                  value:
                    data: null
                    message: The request completed successfully
                    code: null
                    status: SUCCESS
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: username cannot be blank |
            | 200002: Invalid username format |
            | 202001: username has already existed |
            | 200001: password cannot be blank |
            | 200003: gender isn't in supported list |
            | 200002: Invalid dob format |
            | 200002: Invalid contact_phone format |
            | 203037: The contact phone has been duplicated with the primary phone |
            | 200002: Invalid email format |
            | 200002: Invalid email_verified format |
            | 203022: Invalid consent receipt |
          content:
            application/json:
              example:
                message: username cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/accounts/{username}":
    put:
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: username
          in: path
          required: true
          schema:
            type: string
      tags:
        - Account APIs
      operationId: updateTopenIDAccount
      summary: Update RP profile
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserProfileRequest"
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        nullable: true
                        example:
              examples:
                update_successful:
                  summary: Update RP profile successfully
                  value:
                    data: null
                    message: The request completed successfully
                    code: null
                    status: SUCCESS
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: username cannot be blank |
            | 200003: gender isn't in supported list |
            | 200002: Invalid dob format |
            | 200002: Invalid contact_phone format |
            | 203037: The contact phone has been duplicated with the primary phone |
            | 200002: Invalid email format |
            | 200002: Invalid email_verified format |
            | 203038: The account cannot be updated |
          content:
            application/json:
              example:
                message: username cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '404':
          description: |
            **Not Found**
            | Error Code: Message |
            | -- |
            | 202007: username cannot be found |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/accounts/add":
    post:
      tags:
        - Account APIs
      security:
        - bearerAuth: [ ]
      operationId: registerTopenIDAccount
      summary: Register TopenID account
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddAccountRequest"
        required: true
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer {TopenX user access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        properties:
                          ht_id:
                            type: string
              examples:
                create_successful:
                  summary: Register a user account successfully
                  value:
                    data:
                      ht_id: '2828917688328040'
                    message: "The request completed successfully"
                    code: null
                    status: SUCCESS
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 202001: username has already existed |
            | 200001: password cannot be blank |
            | 200010: Password must be between 8 and 30 characters, contain a digit[0-9], a lower case letter[a-z], an upper case letter[A-Z] |
            | 200001: first_name cannot be blank |
            | 200004: first_name's length must be less than 256 |
            | 200001: last_name cannot be blank |
            | 200004: last_name's length must be less than 256 |
            | 200003: gender isn't in supported list |
            | 200002: Invalid dob format |
            | 203004: Date of birth must be dd/MM/yyyy or earlier |
            | 203022: Invalid consent receipt |
          content:
            application/json:
              example:
                message: username has already existed
                status: FAILURE
                code: 202001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203015: Invalid access token |
        '403':
          description: |
            **Forbidden**
            | Error Code: Message |
            | -- |
            | 203016: Access denied |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseData:
      type: object
      properties:
        message:
          type: string
          nullable: true
          example:
        status:
          type: string
          example: SUCCESS
          enum:
            - SUCCESS
            - FAILURE
        code:
          type: string
          nullable: true
          example:
    ErrorResponseData:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          nullable: true
          example:
          description: Data is null when we got an error.
        status:
          type: string
          example: FAILURE
          enum:
            - SUCCESS
            - FAILURE
        code:
          type: string
          description: TBD, error code of detail error.
    CreateAccountRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username is the primary phone.
            The phone format should contain 10 digits [0-9]
          example: "0912345678"
        password:
          type: string
          example: hgn5lnshd4A
        first_name:
          type: string
          example: Thảo Nguyên
        last_name:
          type: string
          example: Trần
        gender:
          type: string
          example: FEMALE
          enum:
            - MALE
            - FEMALE
            - OTHER
        dob:
          type: string
          description: Date of birth. In format dd/MM/yyyy.
          example: 20/01/1990
        contact_phone:
          type: string
          description: The phone format should contain 10 digits [0-9]. It is different from the primary phone
          example: "0908070605"
        email:
          type: string
          example: tranthaonguyen@gmail.com
        email_verified:
          type: boolean
          example: true
        consent_receipt:
          type: array
          description: A list of consent purpose ID
          items:
            type: string
            example: 61c870402b9c37dfa3220c21
    UpdateUserProfileRequest:
      type: object
      properties:
        first_name:
          type: string
          example: Thảo Nguyên
        last_name:
          type: string
          example: Trần
        gender:
          type: string
          example: FEMALE
          enum:
            - MALE
            - FEMALE
            - OTHER
        dob:
          type: string
          description: Date of birth. In format dd/MM/yyyy.
          example: 20/01/1990
        contact_phone:
          type: string
          description: The phone format should contain 10 digits [0-9]. It is different from the primary phone
          example: "0908070605"
        email:
          type: string
          example: tranthaonguyen@gmail.com
        email_verified:
          type: boolean
          example: true
    AddAccountRequest:
      type: object
      required:
        - password
      properties:
        password:
          type: string
          minLength: 8
          maxLength: 30
          description: Password must be between 8 and 30 characters, contain a digit[0-9],
            a lower case letter[a-z], an upper case letter[A-Z]
          example: hgn5lnshd4A
        first_name:
          type: string
          maxLength: 255
          example: Thảo Nguyên
        last_name:
          type: string
          maxLength: 255
          example: Trần
        gender:
          type: string
          example: FEMALE
          enum:
            - MALE
            - FEMALE
            - OTHER
        dob:
          type: string
          description: Date of birth. In format dd/MM/yyyy.
          example: 20/01/1990
        consent_receipt:
          type: array
          description: A list of consent purpose ID
          items:
            type: string
            example: 61c870402b9c37dfa3220c21
