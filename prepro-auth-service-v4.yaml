openapi: 3.0.1
info:
  title: Auth service
  version: v4
servers:
  - url: Please follow the release note for further information
tags:
  - name: Authentication APIs
    description: Group of APIs to authenticate users and relying parties
  - name: Access Session APIs
    description: Group of APIs to manage session access
  - name: Account Management APIs
    description: Group of APIs to manage account
paths:
  "/client-access-token":
    post:
      tags:
        - Authentication APIs
      summary: Generate client access token
      description: "This API is used to generate client access token. \n When granting a new client access token, all old access tokens will invalid. Should keep the token unique in the system."
      operationId: generateClientToken
      parameters:
        - name: Client-Id
          in: header
          required: true
          schema:
            type: string
        - name: Client-Secret
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/ClientTokenResponse"
              examples:
                client_access_token:
                  summary: client access token
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      access_token: eyJ4NXQiOiJNell4TW1Ga09HWXdNV0kwWldObU5EY3hO...
                      expires_in: 3600
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: client_id cannot be blank |
            | 200001: client_secret cannot be blank |
            | 203024: Missing request header Client-Id for method parameter of type String |
            | 203024: Missing request header Client-Secret for method parameter of type String |
          content:
            application/json:
              example:
                message: client_id cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203012: Invalid client credentials |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/introspect":
    post:
      tags:
        - Authentication APIs
      security:
        - bearerAuth: [ ]
      summary: Validate an access_token
      description: This API is used to validate an access_token whether it is valid or not.
      operationId: introspectToken
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/IntrospectRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntrospectResponse"
              example:
                code: null
                data:
                  exp:
                  username: string
                  active: true
                  token_type: string
                  client_id: string
                  iat:
                message: null
                status: SUCCESS
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: token cannot be blank |
          content:
            application/json:
              example:
                message: token cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/configurations/locking-account":
    post:
      tags:
        - Account Management APIs
      summary: Account Locking Configuration
      description: "Account Locking Configuration:\n 1. Enable status check lock account.
        \n 2. Config Maximum Failed Login Attempts (Null is the default value). \n
        3. Config Seconds Locking time period (Null is the default value)."
      operationId: lockingConfiguration
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountLockingConfigurationRequest"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/AccountLockingConfigurationResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      client_id: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      account_lock_enabled: true
                      maximum_failed_login_attempts: 5
                      account_unlock_time: 300
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: account_lock_enabled cannot be blank |
            | 200002: Invalid account_lock_enabled format |
            | 200002: Invalid maximum_failed_login_attempts format |
            | 200008: maximum_failed_login_attempts must be greater than 0 and smaller or equal to {maximum value} |
            | 200002: Invalid account_unlock_time format |
            | 200008: account_unlock_time must be greater than 0 and smaller or equal to {maximum value} |
          content:
            application/json:
              example:
                message: account_lock_enabled cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/accounts/{ht_id}/block":
    post:
      tags:
        - Account Management APIs
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: ht_id
          in: path
          required: true
          schema:
            type: string
      summary: Block an account for a reason
      operationId: blockAccount
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BlockAccountRequest"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/BlockAccountResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      ht_id: "2234949241839324"
                      locked: false
                      blocked: true
                      active: true
                      last_modified_date: 1625454349735
                      reason: "string"
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: ht_id cannot be blank |
            | 200001: reason cannot be blank |
            | 200004: reason's length must be less than 501 |
            | 203028: This account has been blocked |
          content:
            application/json:
              example:
                message: ht_id cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '404':
          description: |
            **Not Found**
            | Error Code: Message |
            | -- |
            | 202007: ht_id cannot be found |
            | 200007: The requested resource cannot be found |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/accounts/{ht_id}/unblock":
    put:
      tags:
        - Account Management APIs
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: ht_id
          in: path
          required: true
          schema:
            type: string
      summary: Unblock an account for a reason
      operationId: unblockAccount
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UnblockAccountRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/UnblockAccountResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      ht_id: "2234949241839324"
                      locked: false
                      blocked: true
                      active: true
                      last_modified_date: 1625454349735
                      reason: "string"
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: ht_id cannot be blank |
            | 200001: reason cannot be blank |
            | 200004: reason's length must be less than 501 |
            | 203026: This account wasn't blocked |
          content:
            application/json:
              example:
                message: ht_id cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '404':
          description: |
            **Not Found**
            | Error Code: Message |
            | -- |
            | 202007: ht_id cannot be found |
            | 200007: The requested resource cannot be found |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/accounts/{ht_id}/unlock":
    put:
      tags:
        - Account Management APIs
      operationId: unlockAccount
      summary: Unlock account manually
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: ht_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/UnlockAccountResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      ht_id: "2234949241839324"
                      locked: false
                      blocked: false
                      active: true
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: ht_id cannot be blank |
            | 203029: This account wasn't locked |
          content:
            application/json:
              example:
                message: ht_id cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '404':
          description: |
            **Not Found**
            | Error Code: Message |
            | -- |
            | 202007: ht_id cannot be found |
            | 200007: The requested resource cannot be found |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/configurations/access-session":
    get:
      tags:
        - Access Session APIs
      operationId: fetchAccessSessionConfiguration
      summary: Retrieve Access Session Configuration
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/AccessSessionConfigurationResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      max_active_session: 1
                      channel_dependency: true
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
          content:
            application/json:
              example:
                message: Invalid access token
                status: FAILURE
                code: 900901
                data: null
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
    post:
      tags:
        - Access Session APIs
      summary: Access Session Configuration
      description: "Access Session Configuration:\n 1. Max active session: The maximum
        number of allowed active sessions \n 2. Channel dependency: \n+ True = Per
        channel (Web browser, Mobile app): Default value\n+ False = All channels"
      operationId: accessSessionConfiguration
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccessSessionConfigurationRequest"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/AccessSessionConfigurationResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      max_active_session: 1
                      channel_dependency: true
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200002: Invalid max_active_session format |
            | 200008: max_active_session must be greater than 0 and smaller or equal to {maximum value} |
            | 200002: Invalid channel_dependency format |
          content:
            application/json:
              example:
                message: Invalid max_active_session format
                status: FAILURE
                code: 200002
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/access-session":
    post:
      tags:
        - Access Session APIs
      security:
        - bearerAuth: [ ]
      summary: Get access session
      description: Get new access session with user's credentials.
      operationId: getAccessSession
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: Client-Id
          in: header
          schema:
            type: string
        - name: Client-Secret
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccessSessionRequest"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessSessionResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      access_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      refresh_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      id_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      token_type: "Bearer"
                      session_id: "6184441f-10e0db6bfb14"
                      access_channel: "Mobile"
                      access_time: 1625454349735,
                      password_expiry_date: 1625454343452
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: username cannot be blank |
            | 200001: password cannot be blank |
            | 200001: access_channel cannot be blank |
            | 200003: access_channel isn't in supported list |
            | 203011: Cannot authenticate an un-activated user account |
            | 203027: This account has been locked (Data field response will return unlock_time={Unix timestamp}) |
            | 203028: This account has been blocked |
          content:
            application/json:
              example:
                message: username cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203010: Invalid user credentials |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '403':
          description: |
            **Forbidden**
            | Error Code: Message |
            | -- |
            | 203032: Lack of valid consent receipt |
            | 202008: The password has expired |
            | 203033: The account has been blocked |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/refreshed-access-session":
    post:
      tags:
        - Access Session APIs
      summary: Exchange refresh token for an active access session
      description: This API is used when a new access token is needed without user credentials.
      operationId: getRefreshedAccessSession
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: Client-Id
          in: header
          schema:
            type: string
        - name: Client-Secret
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RefreshAccessSessionRequest"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessSessionResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      access_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      refresh_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      id_token: "6184441f-64b0-32d7-891f-10e0db6bfb14"
                      token_type: "Bearer"
                      session_id: "6184441f-10e0db6bfb14"
                      access_channel: "Mobile"
                      access_time: 1625454349735
                      password_expiry_date: 1625454343452
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: refresh_token cannot be blank |
          content:
            application/json:
              example:
                message: refresh_token cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203014: Invalid refresh token |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '403':
          description: |
            **Forbidden**
            | Error Code: Message |
            | -- |
            | 202008: The password has expired |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/sessions/{session_id}":
    delete:
      security:
        - bearerAuth: []
      tags:
        - Access Session APIs
      summary: Revoke access session
      description: Revoke access session by sessionId.
      operationId: revokeAccessSession
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer {user access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        type: object
                        nullable: true
                        example:
              examples:
                update_successful:
                  summary: revoke successful
                  value:
                    data: null
                    message: The request completed successfully
                    code: null
                    status: SUCCESS
        '400':
          description: |
            **Bad Request**
            | Error Code: Message |
            | -- |
            | 200001: session_id cannot be blank |
            | 202002: session_id cannot be found |
          content:
            application/json:
              example:
                message: session_id cannot be blank
                status: FAILURE
                code: 200001
                data: null
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203015: Invalid access token |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
        '403':
          description: |
            **Forbidden**
            | Error Code: Message |
            | -- |
            | 203016: Access denied |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
  "/active-access-sessions":
    get:
      tags:
        - Access Session APIs
      security:
        - bearerAuth: []
      operationId: fetchActiveAccessSessions
      summary: Retrieve List of Active Access Sessions with an access token
      parameters:
        - name: Client-Token
          in: header
          required: true
          schema:
            type: string
          description: Bearer {client access token}
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer {user access token}
        - name: lang
          in: query
          schema:
            type: string
          description: lang=vi or lang=en (If lang is missing, the default vi language will be return)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - "$ref": "#/components/schemas/ResponseData"
                  - type: object
                    properties:
                      data:
                        "$ref": "#/components/schemas/ActiveAccessSessionResponse"
              examples:
                success:
                  summary: The request completed successfully
                  value:
                    message: The request completed successfully
                    status: SUCCESS
                    code: null
                    data:
                      ht_id: '2828917688328040'
                      sessions:
                        - session_id: string
                          access_time: 1625454349735
                          access_channel: string
        '401':
          description: |
            **Unauthorized**
            | Error Code: Message |
            | -- |
            | 203015: Invalid access token |
            | 900901: Invalid authentication information provided |
            | 900902: No authentication information provided |
          content:
            application/json:
              example:
                message: Invalid access token
                status: FAILURE
                code: 203015
                data: null
        '403':
          description: |
            **Forbidden**
            | Error Code: Message |
            | -- |
            | 203016: Access denied |
        '500':
          description: |
            **Internal server error**
            | Error Code: Message |
            | -- |
            | 100500: Error detail message |
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseData:
      type: object
      properties:
        message:
          type: string
          nullable: true
          example: null
        status:
          type: string
          example: SUCCESS
          enum:
            - SUCCESS
            - FAILURE
        code:
          type: string
          nullable: true
          example: null
    TokenRequest:
      type: object
      required:
        - scope
        - grant_type
      properties:
        username:
          type: string
          example: dat
        password:
          type: string
          example: dat@12345
        scope:
          type: string
          example: openid
        grant_type:
          type: string
          enum:
            - password
            - client_credentials
            - refresh_token
          example: password
        refresh_token:
          type: string
          example: dfhguHSDFSDIsugdsjkKDJFGDFKJ
    IntrospectRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: dat
          description: |
            Supported tokens:
            1. User access token
            2. TopenX user access token
            3. Client access token from grant-token API
    IntrospectResponse:
      type: object
      required:
        - username
        - active
        - token_type
        - client_id
        - iat
      properties:
        code:
          type: string
        data:
          type: object
          properties:
            exp:
              type: integer
              format: int32
              nullable: true
            username:
              type: string
            active:
              type: boolean
            token_type:
              type: string
            client_id:
              type: string
            iat:
              type: integer
              format: int32
              nullable: true
        message:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
      title: Response
    ClientTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          format: int32
      title: Response
    ErrorResponseData:
      type: object
      properties:
        data:
          type: object
          nullable: true
          example:
          description: Data is null when we got an error.
        message:
          type: string
          description: Information detail of status
          example: Internal server error
        status:
          type: string
          enum:
            - FAILURE
        code:
          type: string
          description: TBD, error code of detail error
          example: '100500'
    BlockAccountRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          maxLength: 500
          example: String
    BlockAccountResponse:
      type: object
      properties:
        ht_id:
          type: string
          example: 2234949241839324
        locked:
          type: boolean
          example: false
        blocked:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        last_modified_date:
          type: integer
          format: int64
          example: 1625454349735
          description: Unix timestamps in miliseconds.
        reason:
          type: string
          maxLength: 500
          example: string
          description: blocking reason.
    AccountLockingConfigurationRequest:
      type: object
      required:
        - account_lock_enabled
      properties:
        account_lock_enabled:
          type: boolean
          example: true
        maximum_failed_login_attempts:
          type: integer
          example: 5
        account_unlock_time:
          type: integer
          example: 300
          description: Seconds
    AccountLockingConfigurationResponse:
      type: object
      properties:
        client_id:
          type: string
        account_lock_enabled:
          type: boolean
          example: true
        maximum_failed_login_attempts:
          type: integer
          example: 5
        account_unlock_time:
          type: integer
          example: 300
    UnlockAccountResponse:
      type: object
      properties:
        ht_id:
          type: string
          example: 2234949241839324
        locked:
          type: boolean
          example: false
        blocked:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
    UnblockAccountRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          maxLength: 500
          example: String
    UnblockAccountResponse:
      type: object
      properties:
        ht_id:
          type: string
          example: 2234949241839324
        locked:
          type: boolean
          example: false
        blocked:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        last_modified_date:
          type: integer
          format: int64
          example: 1625454349735
          description: Unix timestamps in miliseconds.
        reason:
          type: string
          maxLength: 500
          example: string
          description: unblocking reason.
    AccessSessionConfigurationRequest:
      type: object
      required:
        - max_active_session
        - channel_dependency
      properties:
        max_active_session:
          type: integer
          example: 1
        channel_dependency:
          type: boolean
          example: true
    AccessSessionConfigurationResponse:
      type: object
      properties:
        max_active_session:
          type: integer
          example: 1
        channel_dependency:
          type: boolean
          example: true
    RefreshAccessSessionRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
          example: 6184441f-64b0-32d7-891f-10e0db6bfb14
    AccessSessionResponse:
      type: object
      properties:
        code:
          type: string
        data:
          type: object
          properties:
            access_token:
              type: string
              example: 6184441f-64b0-32d7-891f-10e0db6bfb14
            refresh_token:
              type: string
              example: 6184441f-64b0-32d7-891f-10e0db6bfb14
            id_token:
              type: string
              example: 6184441f-64b0-32d7-891f-10e0db6bfb14
            token_type:
              type: string
              example: Bearer
            session_id:
              type: string
              example: 6184441f-10e0db6bfb14
            access_channel:
              type: string
              example: Mobile
            access_time:
              type: integer
              format: int64
              example: 1625454349735
              description: Unix timestamps in miliseconds.
            password_expiry_date:
              type: integer
              format: int64
              example: 1625454343452
              description: Unix timestamps in miliseconds.
        message:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
    ActiveAccessSessionResponse:
      type: object
      properties:
        ht_id:
          type: string
        sessions:
          type: array
          items:
            "$ref": "#/components/schemas/ActiveAccessSessionDto"
    ActiveAccessSessionDto:
      type: object
      properties:
        session_id:
          type: string
        access_time:
          type: integer
          format: int64
          example: 1625454349735
          description: Unix timestamps in miliseconds.
        access_channel:
          type: string
    AccessSessionRequest:
      type: object
      required:
        - username
        - password
        - access_channel
      properties:
        username:
          type: string
          example: 91111111
        password:
          type: string
          example: abcd1234
        access_channel:
          type: string
          enum:
            - Mobile
            - Web
        consent_receipt:
          type: array
          items:
            type: string
          description: A list of consent purpose ID of RP
          example:
            - '2234949241839324'